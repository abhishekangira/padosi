generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  cuid      String    @unique @default(cuid()) @db.VarChar(30)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String?
  content   String    @db.VarChar(1000)
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  likes     Like[]
  comments  Comment[]

  @@index([authorId])
}

model User {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  uid       String    @unique
  email     String    @unique
  username  String    @unique @db.VarChar(20)
  name      String
  photo     String?   @db.VarChar(255)
  latitude  Float
  longitude Float
  tagline   String?   @db.VarChar(60)
  bio       String?   @db.VarChar(255)
  posts     Post[]
  likes     Like[]
  comments  Comment[]
}

model Like {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  userId      Int
  postId      Int?
  commentId   Int?
  likedEntity EntityType
  user        User       @relation(fields: [userId], references: [id])
  Post        Post?      @relation(fields: [postId], references: [id])
  Comment     Comment?   @relation(fields: [commentId], references: [id])

  @@index([userId])
  @@index([postId])
  @@index([commentId])
}

model Comment {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String   @db.VarChar(1000)
  authorId  Int
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  likes     Like[]

  @@index([authorId])
  @@index([postId])
}

enum EntityType {
  POST
  COMMENT
}
